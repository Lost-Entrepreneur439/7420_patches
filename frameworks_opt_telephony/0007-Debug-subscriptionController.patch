From 32c29ea11a0811f22866019e72d479f928581c05 Mon Sep 17 00:00:00 2001
From: html6405 <peter.schelchshorn@mhs-solutions.at>
Date: Mon, 22 Nov 2021 17:24:47 +0100
Subject: [PATCH 07/14] Debug subscriptionController

Change-Id: Ie81e96760c8b645328d8eafa8ebf7ae0fd0f628c
---
 .../com/android/internal/telephony/ServiceStateTracker.java | 6 ++++++
 .../android/internal/telephony/SubscriptionController.java  | 3 +++
 .../android/internal/telephony/SubscriptionInfoUpdater.java | 2 ++
 3 files changed, 11 insertions(+)

diff --git a/src/java/com/android/internal/telephony/ServiceStateTracker.java b/src/java/com/android/internal/telephony/ServiceStateTracker.java
index e2c6aa5cab..9cc111b55e 100755
--- a/src/java/com/android/internal/telephony/ServiceStateTracker.java
+++ b/src/java/com/android/internal/telephony/ServiceStateTracker.java
@@ -3024,10 +3024,12 @@ public class ServiceStateTracker extends Handler {
                 final boolean forceDisplayNoService = shouldForceDisplayNoService() && !mIsSimReady;
                 if (!forceDisplayNoService && Phone.isEmergencyCallOnly()) {
                     // No service but emergency call allowed
+                    SystemProperties.set("gsm.status", "0");
                     plmn = Resources.getSystem()
                             .getText(com.android.internal.R.string.emergency_calls_only).toString();
                 } else {
                     // No service at all
+                    SystemProperties.set("gsm.status", "1");
                     plmn = Resources.getSystem()
                             .getText(
                                 com.android.internal.R.string.lockscreen_carrier_default)
@@ -3038,6 +3040,7 @@ public class ServiceStateTracker extends Handler {
                         "of service, set plmn='" + plmn + "'");
             } else if (combinedRegState == ServiceState.STATE_IN_SERVICE) {
                 // In either home or roaming service
+                SystemProperties.set("gsm.status", "2");
                 plmn = mSS.getOperatorAlpha();
                 showPlmn = !TextUtils.isEmpty(plmn) &&
                         ((rule & CARRIER_NAME_DISPLAY_BITMASK_SHOW_PLMN)
@@ -3045,6 +3048,7 @@ public class ServiceStateTracker extends Handler {
                 if (DBG) log("updateSpnDisplay: rawPlmn = " + plmn);
             } else {
                 // Power off state, such as airplane mode, show plmn as null
+                SystemProperties.set("gsm.status", "3");
                 showPlmn = true;
                 plmn = null;
                 if (DBG) log("updateSpnDisplay: radio is off w/ showPlmn="
@@ -3121,6 +3125,8 @@ public class ServiceStateTracker extends Handler {
 
             // mOperatorAlpha contains the ERI text
             plmn = mSS.getOperatorAlpha();
+            SystemProperties.set("gsm.plmn", plmn);
+
             if (DBG) log("updateSpnDisplay: cdma rawPlmn = " + plmn);
 
             showPlmn = plmn != null;
diff --git a/src/java/com/android/internal/telephony/SubscriptionController.java b/src/java/com/android/internal/telephony/SubscriptionController.java
index dea8c8069a..9512bf98be 100644
--- a/src/java/com/android/internal/telephony/SubscriptionController.java
+++ b/src/java/com/android/internal/telephony/SubscriptionController.java
@@ -45,6 +45,7 @@ import android.os.PersistableBundle;
 import android.os.RegistrantList;
 import android.os.RemoteException;
 import android.os.TelephonyServiceManager.ServiceRegisterer;
+import android.os.SystemProperties;
 import android.os.UserHandle;
 import android.provider.Settings;
 import android.telecom.PhoneAccountHandle;
@@ -2548,6 +2549,7 @@ public class SubscriptionController extends ISub.Stub {
 
     @Override
     public int getSlotIndex(int subId) {
+        SystemProperties.set("gsm.subid", String.valueOf(subId));
         if (VDBG) printStackTrace("[getSlotIndex] subId=" + subId);
 
         if (subId == SubscriptionManager.DEFAULT_SUBSCRIPTION_ID) {
@@ -2555,6 +2557,7 @@ public class SubscriptionController extends ISub.Stub {
         }
         if (!SubscriptionManager.isValidSubscriptionId(subId)) {
             if (DBG) logd("[getSlotIndex]- subId invalid");
+            SystemProperties.set("gsm.radioreset", "true");
             return SubscriptionManager.INVALID_SIM_SLOT_INDEX;
         }
 
diff --git a/src/java/com/android/internal/telephony/SubscriptionInfoUpdater.java b/src/java/com/android/internal/telephony/SubscriptionInfoUpdater.java
index 36751a3389..596542d3dc 100644
--- a/src/java/com/android/internal/telephony/SubscriptionInfoUpdater.java
+++ b/src/java/com/android/internal/telephony/SubscriptionInfoUpdater.java
@@ -35,6 +35,7 @@ import android.os.Message;
 import android.os.ParcelUuid;
 import android.os.PersistableBundle;
 import android.os.UserHandle;
+import android.os.SystemProperties;
 import android.preference.PreferenceManager;
 import android.service.carrier.CarrierIdentifier;
 import android.service.carrier.CarrierService;
@@ -1136,6 +1137,7 @@ public class SubscriptionInfoUpdater extends Handler {
         SubscriptionManager.putPhoneIdAndSubIdExtra(i, phoneId);
         logd("Broadcasting intent ACTION_SIM_STATE_CHANGED " + state + " reason " + reason +
                 " for phone: " + phoneId);
+        SystemProperties.set("gsm.sim_state", state);
         IntentBroadcaster.getInstance().broadcastStickyIntent(sContext, i, phoneId);
     }
 
-- 
2.37.1

