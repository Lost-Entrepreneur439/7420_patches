From 7e1fdc338d3e7495a1bde9b106b0eb0038934d82 Mon Sep 17 00:00:00 2001
From: html6405 <peter.schelchshorn@mhs-solutions.at>
Date: Mon, 22 Nov 2021 17:43:33 +0100
Subject: [PATCH 08/14] telephony  add support for fake ICCID

Change-Id: I876ac0553c6e14a40dfa73733dac3b0dedfc171f
---
 .../com/android/internal/telephony/RIL.java   |  8 +--
 .../telephony/SubscriptionInfoUpdater.java    | 50 +++++++++++++------
 .../internal/telephony/uicc/IccConstants.java |  3 ++
 .../internal/telephony/uicc/RuimRecords.java  | 27 +++++++---
 .../internal/telephony/uicc/SIMRecords.java   | 17 +++++--
 5 files changed, 74 insertions(+), 31 deletions(-)

diff --git a/src/java/com/android/internal/telephony/RIL.java b/src/java/com/android/internal/telephony/RIL.java
index d8cecf8941..8a7b23c445 100644
--- a/src/java/com/android/internal/telephony/RIL.java
+++ b/src/java/com/android/internal/telephony/RIL.java
@@ -255,7 +255,6 @@ public class RIL extends BaseCommands implements CommandsInterface {
     AtomicBoolean mTestingEmergencyCall = new AtomicBoolean(false);
 
     final Integer mPhoneId;
-    private List<String> mOldRilFeatures;
     private boolean mUseOldMncMccFormat;
 
     private boolean mUseOldMncMccFormat;
@@ -624,7 +623,6 @@ public class RIL extends BaseCommands implements CommandsInterface {
             mRadioBugDetector = new RadioBugDetector(context, mPhoneId);
         }
 
-
         mUseOldMncMccFormat = SystemProperties.getBoolean(
                 "ro.telephony.use_old_mnc_mcc_format", false);
 
@@ -7832,7 +7830,9 @@ public class RIL extends BaseCommands implements CommandsInterface {
         return mRadioVersion;
     }
 
-    public boolean needsOldRilFeature(String feature) {
-        return mOldRilFeatures.contains(feature);
+    public static boolean needsOldRilFeature(String feature) {
+        List<String> oldRilFeatures = Arrays.asList(SystemProperties.get("ro.telephony.ril.config", "").split(","));
+
+        return oldRilFeatures.contains(feature);
     }
 }
diff --git a/src/java/com/android/internal/telephony/SubscriptionInfoUpdater.java b/src/java/com/android/internal/telephony/SubscriptionInfoUpdater.java
index 596542d3dc..700784f728 100644
--- a/src/java/com/android/internal/telephony/SubscriptionInfoUpdater.java
+++ b/src/java/com/android/internal/telephony/SubscriptionInfoUpdater.java
@@ -60,6 +60,9 @@ import com.android.internal.telephony.uicc.IccUtils;
 import com.android.internal.telephony.uicc.UiccCard;
 import com.android.internal.telephony.uicc.UiccController;
 import com.android.internal.telephony.uicc.UiccSlot;
+import com.android.internal.telephony.RIL;
+
+import static com.android.internal.telephony.uicc.IccConstants.FAKE_ICCID;
 import com.android.telephony.Rlog;
 
 import java.io.FileDescriptor;
@@ -98,6 +101,9 @@ public class SubscriptionInfoUpdater extends Handler {
     private static final ParcelUuid REMOVE_GROUP_UUID =
             ParcelUuid.fromString(CarrierConfigManager.REMOVE_GROUP_UUID_STRING);
 
+    // Fake ICCID
+    private static final String FAKE_ICCID = "00000000000001";
+
     // Key used to read/write the current IMSI. Updated on SIM_STATE_CHANGED - LOADED.
     public static final String CURR_SUBID = "curr_subid";
 
@@ -452,7 +458,10 @@ public class SubscriptionInfoUpdater extends Handler {
             // 2) Its uicc applications are set to be disabled.
             // At this phase, the subscription list is accessible. Treating NOT_READY
             // as equivalent to ABSENT, once the rest of the system can handle it.
-            sIccId[phoneId] = ICCID_STRING_FOR_NO_SIM;
+            if (!RIL.needsOldRilFeature("fakeiccid"))
+                sIccId[phoneId] = ICCID_STRING_FOR_NO_SIM;
+            else
+                sIccId[phoneId] = FAKE_ICCID;
             updateSubscriptionInfoByIccId(phoneId, false /* updateEmbeddedSubs */);
         } else {
             sIccId[phoneId] = null;
@@ -666,7 +675,10 @@ public class SubscriptionInfoUpdater extends Handler {
                     SubscriptionManager.ICC_ID + "=\'" + iccId + "\'", null);
             sInactiveIccIds[phoneId] = null;
         }
-        sIccId[phoneId] = ICCID_STRING_FOR_NO_SIM;
+        if (!RIL.needsOldRilFeature("fakeiccid"))
+            sIccId[phoneId] = ICCID_STRING_FOR_NO_SIM;
+        else
+            sIccId[phoneId] = FAKE_ICCID;
         updateSubscriptionInfoByIccId(phoneId, true /* updateEmbeddedSubs */);
     }
 
@@ -680,25 +692,35 @@ public class SubscriptionInfoUpdater extends Handler {
         }
         cleanSubscriptionInPhone(phoneId, true);
 
-        broadcastSimStateChanged(phoneId, IccCardConstants.INTENT_VALUE_ICC_ABSENT, null);
-        broadcastSimCardStateChanged(phoneId, TelephonyManager.SIM_STATE_ABSENT);
-        broadcastSimApplicationStateChanged(phoneId, TelephonyManager.SIM_STATE_UNKNOWN);
-        updateSubscriptionCarrierId(phoneId, IccCardConstants.INTENT_VALUE_ICC_ABSENT);
-        updateCarrierServices(phoneId, IccCardConstants.INTENT_VALUE_ICC_ABSENT);
+        if (!RIL.needsOldRilFeature("fakeiccid")) {
+            broadcastSimStateChanged(phoneId, IccCardConstants.INTENT_VALUE_ICC_ABSENT, null);
+            broadcastSimCardStateChanged(phoneId, TelephonyManager.SIM_STATE_ABSENT);
+            broadcastSimApplicationStateChanged(phoneId, TelephonyManager.SIM_STATE_UNKNOWN);
+            updateSubscriptionCarrierId(phoneId, IccCardConstants.INTENT_VALUE_ICC_ABSENT);
+            updateCarrierServices(phoneId, IccCardConstants.INTENT_VALUE_ICC_ABSENT);
+        }
     }
 
     protected void handleSimError(int phoneId) {
         if (sIccId[phoneId] != null && !sIccId[phoneId].equals(ICCID_STRING_FOR_NO_SIM)) {
             logd("SIM" + (phoneId + 1) + " Error ");
         }
-        sIccId[phoneId] = ICCID_STRING_FOR_NO_SIM;
+
+        if (!RIL.needsOldRilFeature("fakeiccid"))
+            sIccId[phoneId] = ICCID_STRING_FOR_NO_SIM;
+        else
+            sIccId[phoneId] = FAKE_ICCID;
+
         updateSubscriptionInfoByIccId(phoneId, true /* updateEmbeddedSubs */);
-        broadcastSimStateChanged(phoneId, IccCardConstants.INTENT_VALUE_ICC_CARD_IO_ERROR,
-                IccCardConstants.INTENT_VALUE_ICC_CARD_IO_ERROR);
-        broadcastSimCardStateChanged(phoneId, TelephonyManager.SIM_STATE_CARD_IO_ERROR);
-        broadcastSimApplicationStateChanged(phoneId, TelephonyManager.SIM_STATE_NOT_READY);
-        updateSubscriptionCarrierId(phoneId, IccCardConstants.INTENT_VALUE_ICC_CARD_IO_ERROR);
-        updateCarrierServices(phoneId, IccCardConstants.INTENT_VALUE_ICC_CARD_IO_ERROR);
+
+        if (!RIL.needsOldRilFeature("fakeiccid")) {
+            broadcastSimStateChanged(phoneId, IccCardConstants.INTENT_VALUE_ICC_CARD_IO_ERROR,
+                    IccCardConstants.INTENT_VALUE_ICC_CARD_IO_ERROR);
+            broadcastSimCardStateChanged(phoneId, TelephonyManager.SIM_STATE_CARD_IO_ERROR);
+            broadcastSimApplicationStateChanged(phoneId, TelephonyManager.SIM_STATE_NOT_READY);
+            updateSubscriptionCarrierId(phoneId, IccCardConstants.INTENT_VALUE_ICC_CARD_IO_ERROR);
+            updateCarrierServices(phoneId, IccCardConstants.INTENT_VALUE_ICC_CARD_IO_ERROR);
+        }
     }
 
     protected synchronized void updateSubscriptionInfoByIccId(int phoneId,
diff --git a/src/java/com/android/internal/telephony/uicc/IccConstants.java b/src/java/com/android/internal/telephony/uicc/IccConstants.java
index 5eae070eb4..005f091dff 100644
--- a/src/java/com/android/internal/telephony/uicc/IccConstants.java
+++ b/src/java/com/android/internal/telephony/uicc/IccConstants.java
@@ -111,4 +111,7 @@ public interface IccConstants {
 
     //UICC access
     static final String DF_ADF = "7FFF";
+
+    // Fake ICCID
+    static final String FAKE_ICCID = "00000000000001";
 }
diff --git a/src/java/com/android/internal/telephony/uicc/RuimRecords.java b/src/java/com/android/internal/telephony/uicc/RuimRecords.java
index f905bdc6ec..350a582df2 100755
--- a/src/java/com/android/internal/telephony/uicc/RuimRecords.java
+++ b/src/java/com/android/internal/telephony/uicc/RuimRecords.java
@@ -33,12 +33,15 @@ import com.android.internal.annotations.VisibleForTesting;
 import com.android.internal.telephony.CommandsInterface;
 import com.android.internal.telephony.GsmAlphabet;
 import com.android.internal.telephony.MccTable;
+import com.android.internal.telephony.RIL;
 import com.android.internal.telephony.SubscriptionController;
 import com.android.internal.telephony.cdma.sms.UserData;
 import com.android.internal.telephony.uicc.IccCardApplicationStatus.AppType;
 import com.android.internal.util.BitwiseInputStream;
 import com.android.telephony.Rlog;
 
+import static com.android.internal.telephony.uicc.IccConstants.FAKE_ICCID;
+
 import java.io.FileDescriptor;
 import java.io.PrintWriter;
 import java.util.ArrayList;
@@ -666,10 +669,14 @@ public class RuimRecords extends IccRecords {
             case EVENT_GET_CDMA_SUBSCRIPTION_DONE:
                 ar = (AsyncResult)msg.obj;
                 String localTemp[] = (String[])ar.result;
-                if (ar.exception != null) {
-                    break;
+                if (!RIL.needsOldRilFeature("fakeiccid")) {
+                    if (ar.exception != null) {
+                        break;
+                    }
+                } else {
+                    mIccId = FAKE_ICCID;
+                    mFullIccId = FAKE_ICCID;
                 }
-
                 mMyMobileNumber = localTemp[0];
                 mMin2Min1 = localTemp[3];
                 mPrlVersion = localTemp[4];
@@ -684,13 +691,17 @@ public class RuimRecords extends IccRecords {
                 ar = (AsyncResult)msg.obj;
                 data = (byte[])ar.result;
 
-                if (ar.exception != null) {
-                    break;
+                if (!RIL.needsOldRilFeature("fakeiccid")) {
+                    if (ar.exception != null) {
+                        break;
+                    }
+                    mIccId = IccUtils.bcdToString(data, 0, data.length);
+                    mFullIccId = IccUtils.bchToString(data, 0, data.length);
+                } else {
+                    mIccId = FAKE_ICCID;
+                    mFullIccId = FAKE_ICCID;
                 }
 
-                mIccId = IccUtils.bcdToString(data, 0, data.length);
-                mFullIccId = IccUtils.bchToString(data, 0, data.length);
-
                 log("iccid: " + SubscriptionInfo.givePrintableIccid(mFullIccId));
 
             break;
diff --git a/src/java/com/android/internal/telephony/uicc/SIMRecords.java b/src/java/com/android/internal/telephony/uicc/SIMRecords.java
index aed860bb22..517dc43e0b 100644
--- a/src/java/com/android/internal/telephony/uicc/SIMRecords.java
+++ b/src/java/com/android/internal/telephony/uicc/SIMRecords.java
@@ -35,12 +35,15 @@ import android.util.Pair;
 
 import com.android.internal.telephony.CommandsInterface;
 import com.android.internal.telephony.MccTable;
+import com.android.internal.telephony.RIL;
 import com.android.internal.telephony.SmsConstants;
 import com.android.internal.telephony.SubscriptionController;
 import com.android.internal.telephony.gsm.SimTlv;
 import com.android.internal.telephony.uicc.IccCardApplicationStatus.AppType;
 import com.android.telephony.Rlog;
 
+import static com.android.internal.telephony.uicc.IccConstants.FAKE_ICCID;
+
 import java.io.FileDescriptor;
 import java.io.PrintWriter;
 import java.util.ArrayList;
@@ -822,13 +825,17 @@ public class SIMRecords extends IccRecords {
                     ar = (AsyncResult) msg.obj;
                     data = (byte[]) ar.result;
 
-                    if (ar.exception != null) {
-                        break;
+                    if (!RIL.needsOldRilFeature("fakeiccid")) {
+                        if (ar.exception != null) {
+                            break;
+                        }
+                        mIccId = IccUtils.bcdToString(data, 0, data.length);
+                        mFullIccId = IccUtils.bchToString(data, 0, data.length);
+                    } else {
+                        mIccId = FAKE_ICCID;
+                        mFullIccId = FAKE_ICCID;
                     }
 
-                    mIccId = IccUtils.bcdToString(data, 0, data.length);
-                    mFullIccId = IccUtils.bchToString(data, 0, data.length);
-
                     log("iccid: " + SubscriptionInfo.givePrintableIccid(mFullIccId));
                     break;
 
-- 
2.37.1

