From 932d9da00b25f05613c71cc64ffab942ce13c3fb Mon Sep 17 00:00:00 2001
From: html6405 <peter.schelchshorn@mhs-solutions.at>
Date: Wed, 17 Nov 2021 16:18:55 +0100
Subject: [PATCH 2/3] TouchInputMapper.cpp: further port of palm rejection.

Change-Id: Id8329f244ff87e159daced849a2c19debaf351fe
---
 .../reader/mapper/TouchInputMapper.cpp         | 18 ++++++++++++++++++
 .../reader/mapper/TouchInputMapper.h           |  4 ++++
 2 files changed, 22 insertions(+)

diff --git a/services/inputflinger/reader/mapper/TouchInputMapper.cpp b/services/inputflinger/reader/mapper/TouchInputMapper.cpp
index 29a0fc748e..5e73dd9954 100644
--- a/services/inputflinger/reader/mapper/TouchInputMapper.cpp
+++ b/services/inputflinger/reader/mapper/TouchInputMapper.cpp
@@ -41,6 +41,8 @@ static constexpr nsecs_t TOUCH_DATA_TIMEOUT = ms2ns(20);
 // data.
 static constexpr nsecs_t STYLUS_DATA_LATENCY = ms2ns(10);
 
+static const nsecs_t STYLUS_PALM_REJECTION_TIME = ms2ns(50);
+
 // --- Static Definitions ---
 
 template <typename T>
@@ -3425,6 +3427,7 @@ void TouchInputMapper::dispatchPointerStylus(nsecs_t when, nsecs_t readTime, uin
         mPointerSimple.currentProperties.id = 0;
         mPointerSimple.currentProperties.toolType =
                 mCurrentCookedState.cookedPointerData.pointerProperties[index].toolType;
+       mLastStylusTime = when;
     } else {
         down = false;
         hovering = false;
@@ -3508,6 +3511,11 @@ void TouchInputMapper::dispatchPointerSimple(nsecs_t when, nsecs_t readTime, uin
 
     auto [xCursorPosition, yCursorPosition] = getMouseCursorPosition();
 
+    if (rejectPalm(when)) {     // stylus is currently active
+            mPointerSimple.reset();
+            return;
+        }
+
     if (mPointerSimple.down && !down) {
         mPointerSimple.down = false;
 
@@ -3634,6 +3642,8 @@ void TouchInputMapper::dispatchMotion(nsecs_t when, nsecs_t readTime, uint32_t p
                                       const PointerCoords* coords, const uint32_t* idToIndex,
                                       BitSet32 idBits, int32_t changedId, float xPrecision,
                                       float yPrecision, nsecs_t downTime) {
+    if (rejectPalm(when)) return;
+
     PointerCoords pointerCoords[MAX_POINTERS];
     PointerProperties pointerProperties[MAX_POINTERS];
     uint32_t pointerCount = 0;
@@ -4083,4 +4093,12 @@ void TouchInputMapper::setTouchSpots(const PointerCoords* spotCoords, const uint
     mPointerController->setSpots(outSpotCoords.data(), spotIdToIndex, spotIdBits, displayId);
 }
 
+nsecs_t TouchInputMapper::mLastStylusTime = 0;
+
+bool TouchInputMapper::rejectPalm(nsecs_t when) {
+    return (when - mLastStylusTime < STYLUS_PALM_REJECTION_TIME) &&
+        mPointerSimple.currentProperties.toolType != AMOTION_EVENT_TOOL_TYPE_STYLUS &&
+    mPointerSimple.currentProperties.toolType != AMOTION_EVENT_TOOL_TYPE_ERASER;
+}
+
 } // namespace android
diff --git a/services/inputflinger/reader/mapper/TouchInputMapper.h b/services/inputflinger/reader/mapper/TouchInputMapper.h
index e104220e47..e75738f344 100644
--- a/services/inputflinger/reader/mapper/TouchInputMapper.h
+++ b/services/inputflinger/reader/mapper/TouchInputMapper.h
@@ -389,6 +389,9 @@ protected:
     // The time the primary pointer last went down.
     nsecs_t mDownTime;
 
+    // Time when the stylus touched last
+    static nsecs_t mLastStylusTime ;
+
     // The pointer controller, or null if the device is not a pointer.
     std::shared_ptr<PointerControllerInterface> mPointerController;
 
@@ -737,6 +740,7 @@ private:
 
     void sync(nsecs_t when, nsecs_t readTime);
 
+    bool rejectPalm(nsecs_t when) ;
     bool consumeRawTouches(nsecs_t when, nsecs_t readTime, uint32_t policyFlags);
     void processRawTouches(bool timeout);
     void cookAndDispatch(nsecs_t when, nsecs_t readTime);
-- 
2.37.1

