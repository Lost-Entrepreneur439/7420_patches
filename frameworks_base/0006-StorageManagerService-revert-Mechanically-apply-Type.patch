From b33279ef780575abc2a3d0a80d57d93232d70300 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Thu, 14 Oct 2021 21:57:08 +0300
Subject: [PATCH 06/18] StorageManagerService: revert "Mechanically apply
 TypedXml refaster template."

Change-Id: Iebe13e6940b2bc9b194b82b9c22aa44c6fd33137
---
 .../android/server/StorageManagerService.java | 28 +++++++++----------
 1 file changed, 14 insertions(+), 14 deletions(-)

diff --git a/services/core/java/com/android/server/StorageManagerService.java b/services/core/java/com/android/server/StorageManagerService.java
index 6c0ec4d01e1a..ba7604cba1b6 100644
--- a/services/core/java/com/android/server/StorageManagerService.java
+++ b/services/core/java/com/android/server/StorageManagerService.java
@@ -2145,7 +2145,7 @@ class StorageManagerService extends IStorageManager.Stub
                 if (type == START_TAG) {
                     final String tag = in.getName();
                     if (TAG_VOLUMES.equals(tag)) {
-                        final int version = in.getAttributeInt(null, ATTR_VERSION, VERSION_INIT);
+                        final int version = readIntAttribute(in, ATTR_VERSION, VERSION_INIT);
                         final boolean primaryPhysical = SystemProperties.getBoolean(
                                 StorageManager.PROP_PRIMARY_PHYSICAL, false);
                         final boolean validAttr = (version >= VERSION_FIX_PRIMARY)
@@ -2180,7 +2180,7 @@ class StorageManagerService extends IStorageManager.Stub
             TypedXmlSerializer out = Xml.resolveSerializer(fos);
             out.startDocument(null, true);
             out.startTag(null, TAG_VOLUMES);
-            out.attributeInt(null, ATTR_VERSION, VERSION_FIX_PRIMARY);
+            writeIntAttribute(out, ATTR_VERSION, VERSION_FIX_PRIMARY);
             writeStringAttribute(out, ATTR_PRIMARY_STORAGE_UUID, mPrimaryStorageUuid);
             final int size = mRecords.size();
             for (int i = 0; i < size; i++) {
@@ -2199,31 +2199,31 @@ class StorageManagerService extends IStorageManager.Stub
     }
 
     public static VolumeRecord readVolumeRecord(TypedXmlPullParser in) throws IOException {
-        final int type = in.getAttributeInt(null, ATTR_TYPE);
+        final int type = readIntAttribute(in, ATTR_TYPE);
         final String fsUuid = readStringAttribute(in, ATTR_FS_UUID);
         final VolumeRecord meta = new VolumeRecord(type, fsUuid);
         meta.partGuid = readStringAttribute(in, ATTR_PART_GUID);
         meta.nickname = readStringAttribute(in, ATTR_NICKNAME);
-        meta.userFlags = in.getAttributeInt(null, ATTR_USER_FLAGS);
-        meta.createdMillis = in.getAttributeLong(null, ATTR_CREATED_MILLIS, 0);
-        meta.lastSeenMillis = in.getAttributeLong(null, ATTR_LAST_SEEN_MILLIS, 0);
-        meta.lastTrimMillis = in.getAttributeLong(null, ATTR_LAST_TRIM_MILLIS, 0);
-        meta.lastBenchMillis = in.getAttributeLong(null, ATTR_LAST_BENCH_MILLIS, 0);
+        meta.userFlags = readIntAttribute(in, ATTR_USER_FLAGS);
+        meta.createdMillis = readLongAttribute(in, ATTR_CREATED_MILLIS, 0);
+        meta.lastSeenMillis = readLongAttribute(in, ATTR_LAST_SEEN_MILLIS, 0);
+        meta.lastTrimMillis = readLongAttribute(in, ATTR_LAST_TRIM_MILLIS, 0);
+        meta.lastBenchMillis = readLongAttribute(in, ATTR_LAST_BENCH_MILLIS, 0);
         return meta;
     }
 
     public static void writeVolumeRecord(TypedXmlSerializer out, VolumeRecord rec)
             throws IOException {
         out.startTag(null, TAG_VOLUME);
-        out.attributeInt(null, ATTR_TYPE, rec.type);
+        writeIntAttribute(out, ATTR_TYPE, rec.type);
         writeStringAttribute(out, ATTR_FS_UUID, rec.fsUuid);
         writeStringAttribute(out, ATTR_PART_GUID, rec.partGuid);
         writeStringAttribute(out, ATTR_NICKNAME, rec.nickname);
-        out.attributeInt(null, ATTR_USER_FLAGS, rec.userFlags);
-        out.attributeLong(null, ATTR_CREATED_MILLIS, rec.createdMillis);
-        out.attributeLong(null, ATTR_LAST_SEEN_MILLIS, rec.lastSeenMillis);
-        out.attributeLong(null, ATTR_LAST_TRIM_MILLIS, rec.lastTrimMillis);
-        out.attributeLong(null, ATTR_LAST_BENCH_MILLIS, rec.lastBenchMillis);
+        writeIntAttribute(out, ATTR_USER_FLAGS, rec.userFlags);
+        writeLongAttribute(out, ATTR_CREATED_MILLIS, rec.createdMillis);
+        writeLongAttribute(out, ATTR_LAST_SEEN_MILLIS, rec.lastSeenMillis);
+        writeLongAttribute(out, ATTR_LAST_TRIM_MILLIS, rec.lastTrimMillis);
+        writeLongAttribute(out, ATTR_LAST_BENCH_MILLIS, rec.lastBenchMillis);
         out.endTag(null, TAG_VOLUME);
     }
 
-- 
2.37.1

